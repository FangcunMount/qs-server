// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: medical-scale/medical-scale.proto

package medical_scale

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 根据医学量表代码获取医学量表详情请求
type GetMedicalScaleByCodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"` // 医学量表代码
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMedicalScaleByCodeRequest) Reset() {
	*x = GetMedicalScaleByCodeRequest{}
	mi := &file_medical_scale_medical_scale_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMedicalScaleByCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMedicalScaleByCodeRequest) ProtoMessage() {}

func (x *GetMedicalScaleByCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_medical_scale_medical_scale_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMedicalScaleByCodeRequest.ProtoReflect.Descriptor instead.
func (*GetMedicalScaleByCodeRequest) Descriptor() ([]byte, []int) {
	return file_medical_scale_medical_scale_proto_rawDescGZIP(), []int{0}
}

func (x *GetMedicalScaleByCodeRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

// 根据医学量表代码获取医学量表详情响应
type GetMedicalScaleByCodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MedicalScale  *MedicalScale          `protobuf:"bytes,1,opt,name=medical_scale,json=medicalScale,proto3" json:"medical_scale,omitempty"` // 医学量表详情
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMedicalScaleByCodeResponse) Reset() {
	*x = GetMedicalScaleByCodeResponse{}
	mi := &file_medical_scale_medical_scale_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMedicalScaleByCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMedicalScaleByCodeResponse) ProtoMessage() {}

func (x *GetMedicalScaleByCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_medical_scale_medical_scale_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMedicalScaleByCodeResponse.ProtoReflect.Descriptor instead.
func (*GetMedicalScaleByCodeResponse) Descriptor() ([]byte, []int) {
	return file_medical_scale_medical_scale_proto_rawDescGZIP(), []int{1}
}

func (x *GetMedicalScaleByCodeResponse) GetMedicalScale() *MedicalScale {
	if x != nil {
		return x.MedicalScale
	}
	return nil
}

// 根据问卷代码获取医学量表详情请求
type GetMedicalScaleByQuestionnaireCodeRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	QuestionnaireCode string                 `protobuf:"bytes,1,opt,name=questionnaire_code,json=questionnaireCode,proto3" json:"questionnaire_code,omitempty"` // 问卷代码
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetMedicalScaleByQuestionnaireCodeRequest) Reset() {
	*x = GetMedicalScaleByQuestionnaireCodeRequest{}
	mi := &file_medical_scale_medical_scale_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMedicalScaleByQuestionnaireCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMedicalScaleByQuestionnaireCodeRequest) ProtoMessage() {}

func (x *GetMedicalScaleByQuestionnaireCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_medical_scale_medical_scale_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMedicalScaleByQuestionnaireCodeRequest.ProtoReflect.Descriptor instead.
func (*GetMedicalScaleByQuestionnaireCodeRequest) Descriptor() ([]byte, []int) {
	return file_medical_scale_medical_scale_proto_rawDescGZIP(), []int{2}
}

func (x *GetMedicalScaleByQuestionnaireCodeRequest) GetQuestionnaireCode() string {
	if x != nil {
		return x.QuestionnaireCode
	}
	return ""
}

// 根据问卷代码获取医学量表详情响应
type GetMedicalScaleByQuestionnaireCodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MedicalScale  *MedicalScale          `protobuf:"bytes,1,opt,name=medical_scale,json=medicalScale,proto3" json:"medical_scale,omitempty"` // 医学量表详情
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMedicalScaleByQuestionnaireCodeResponse) Reset() {
	*x = GetMedicalScaleByQuestionnaireCodeResponse{}
	mi := &file_medical_scale_medical_scale_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMedicalScaleByQuestionnaireCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMedicalScaleByQuestionnaireCodeResponse) ProtoMessage() {}

func (x *GetMedicalScaleByQuestionnaireCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_medical_scale_medical_scale_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMedicalScaleByQuestionnaireCodeResponse.ProtoReflect.Descriptor instead.
func (*GetMedicalScaleByQuestionnaireCodeResponse) Descriptor() ([]byte, []int) {
	return file_medical_scale_medical_scale_proto_rawDescGZIP(), []int{3}
}

func (x *GetMedicalScaleByQuestionnaireCodeResponse) GetMedicalScale() *MedicalScale {
	if x != nil {
		return x.MedicalScale
	}
	return nil
}

// 解读报告
type InterpretReport struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                      // 解读报告ID
	AnswerSheetId    uint64                 `protobuf:"varint,2,opt,name=answer_sheet_id,json=answerSheetId,proto3" json:"answer_sheet_id,omitempty"`         // 答卷ID
	MedicalScaleCode string                 `protobuf:"bytes,3,opt,name=medical_scale_code,json=medicalScaleCode,proto3" json:"medical_scale_code,omitempty"` // 医学量表代码
	Title            string                 `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`                                                 // 标题
	Description      string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`                                     // 描述
	InterpretItems   []*InterpretItem       `protobuf:"bytes,6,rep,name=interpret_items,json=interpretItems,proto3" json:"interpret_items,omitempty"`         // 解读项列表
	CreatedAt        string                 `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                        // 创建时间
	UpdatedAt        string                 `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                        // 更新时间
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *InterpretReport) Reset() {
	*x = InterpretReport{}
	mi := &file_medical_scale_medical_scale_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InterpretReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterpretReport) ProtoMessage() {}

func (x *InterpretReport) ProtoReflect() protoreflect.Message {
	mi := &file_medical_scale_medical_scale_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterpretReport.ProtoReflect.Descriptor instead.
func (*InterpretReport) Descriptor() ([]byte, []int) {
	return file_medical_scale_medical_scale_proto_rawDescGZIP(), []int{4}
}

func (x *InterpretReport) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *InterpretReport) GetAnswerSheetId() uint64 {
	if x != nil {
		return x.AnswerSheetId
	}
	return 0
}

func (x *InterpretReport) GetMedicalScaleCode() string {
	if x != nil {
		return x.MedicalScaleCode
	}
	return ""
}

func (x *InterpretReport) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *InterpretReport) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *InterpretReport) GetInterpretItems() []*InterpretItem {
	if x != nil {
		return x.InterpretItems
	}
	return nil
}

func (x *InterpretReport) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *InterpretReport) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// 解读项
type InterpretItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FactorCode    string                 `protobuf:"bytes,1,opt,name=factor_code,json=factorCode,proto3" json:"factor_code,omitempty"` // 因子代码
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                             // 标题
	Score         float64                `protobuf:"fixed64,3,opt,name=score,proto3" json:"score,omitempty"`                           // 分数
	Content       string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`                         // 解读内容
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InterpretItem) Reset() {
	*x = InterpretItem{}
	mi := &file_medical_scale_medical_scale_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InterpretItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterpretItem) ProtoMessage() {}

func (x *InterpretItem) ProtoReflect() protoreflect.Message {
	mi := &file_medical_scale_medical_scale_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterpretItem.ProtoReflect.Descriptor instead.
func (*InterpretItem) Descriptor() ([]byte, []int) {
	return file_medical_scale_medical_scale_proto_rawDescGZIP(), []int{5}
}

func (x *InterpretItem) GetFactorCode() string {
	if x != nil {
		return x.FactorCode
	}
	return ""
}

func (x *InterpretItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *InterpretItem) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *InterpretItem) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// 医学量表
type MedicalScale struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                       // 医学量表ID
	Code              string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`                                                    // 医学量表代码
	QuestionnaireCode string                 `protobuf:"bytes,3,opt,name=questionnaire_code,json=questionnaireCode,proto3" json:"questionnaire_code,omitempty"` // 问卷代码
	Title             string                 `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`                                                  // 标题
	Description       string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`                                      // 描述
	Factors           []*Factor              `protobuf:"bytes,6,rep,name=factors,proto3" json:"factors,omitempty"`                                              // 因子列表
	CreatedAt         string                 `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                         // 创建时间
	UpdatedAt         string                 `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                         // 更新时间
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *MedicalScale) Reset() {
	*x = MedicalScale{}
	mi := &file_medical_scale_medical_scale_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MedicalScale) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MedicalScale) ProtoMessage() {}

func (x *MedicalScale) ProtoReflect() protoreflect.Message {
	mi := &file_medical_scale_medical_scale_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MedicalScale.ProtoReflect.Descriptor instead.
func (*MedicalScale) Descriptor() ([]byte, []int) {
	return file_medical_scale_medical_scale_proto_rawDescGZIP(), []int{6}
}

func (x *MedicalScale) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MedicalScale) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *MedicalScale) GetQuestionnaireCode() string {
	if x != nil {
		return x.QuestionnaireCode
	}
	return ""
}

func (x *MedicalScale) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MedicalScale) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MedicalScale) GetFactors() []*Factor {
	if x != nil {
		return x.Factors
	}
	return nil
}

func (x *MedicalScale) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *MedicalScale) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// 因子
type Factor struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Code                string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`                                                          // 因子代码
	Title               string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                                                        // 因子标题
	FactorType          string                 `protobuf:"bytes,3,opt,name=factor_type,json=factorType,proto3" json:"factor_type,omitempty"`                            // 因子类型
	IsTotalScore        bool                   `protobuf:"varint,4,opt,name=is_total_score,json=isTotalScore,proto3" json:"is_total_score,omitempty"`                   // 是否为总分因子
	CalculationRule     *CalculationRule       `protobuf:"bytes,5,opt,name=calculation_rule,json=calculationRule,proto3" json:"calculation_rule,omitempty"`             // 计算规则
	InterpretationRules []*InterpretationRule  `protobuf:"bytes,6,rep,name=interpretation_rules,json=interpretationRules,proto3" json:"interpretation_rules,omitempty"` // 解读规则列表
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Factor) Reset() {
	*x = Factor{}
	mi := &file_medical_scale_medical_scale_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Factor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Factor) ProtoMessage() {}

func (x *Factor) ProtoReflect() protoreflect.Message {
	mi := &file_medical_scale_medical_scale_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Factor.ProtoReflect.Descriptor instead.
func (*Factor) Descriptor() ([]byte, []int) {
	return file_medical_scale_medical_scale_proto_rawDescGZIP(), []int{7}
}

func (x *Factor) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Factor) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Factor) GetFactorType() string {
	if x != nil {
		return x.FactorType
	}
	return ""
}

func (x *Factor) GetIsTotalScore() bool {
	if x != nil {
		return x.IsTotalScore
	}
	return false
}

func (x *Factor) GetCalculationRule() *CalculationRule {
	if x != nil {
		return x.CalculationRule
	}
	return nil
}

func (x *Factor) GetInterpretationRules() []*InterpretationRule {
	if x != nil {
		return x.InterpretationRules
	}
	return nil
}

// 计算规则
type CalculationRule struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FormulaType   string                 `protobuf:"bytes,1,opt,name=formula_type,json=formulaType,proto3" json:"formula_type,omitempty"` // 公式类型
	SourceCodes   []string               `protobuf:"bytes,2,rep,name=source_codes,json=sourceCodes,proto3" json:"source_codes,omitempty"` // 源代码列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CalculationRule) Reset() {
	*x = CalculationRule{}
	mi := &file_medical_scale_medical_scale_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CalculationRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculationRule) ProtoMessage() {}

func (x *CalculationRule) ProtoReflect() protoreflect.Message {
	mi := &file_medical_scale_medical_scale_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculationRule.ProtoReflect.Descriptor instead.
func (*CalculationRule) Descriptor() ([]byte, []int) {
	return file_medical_scale_medical_scale_proto_rawDescGZIP(), []int{8}
}

func (x *CalculationRule) GetFormulaType() string {
	if x != nil {
		return x.FormulaType
	}
	return ""
}

func (x *CalculationRule) GetSourceCodes() []string {
	if x != nil {
		return x.SourceCodes
	}
	return nil
}

// 解读规则
type InterpretationRule struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ScoreRange    *ScoreRange            `protobuf:"bytes,1,opt,name=score_range,json=scoreRange,proto3" json:"score_range,omitempty"` // 分数范围
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`                         // 解读内容
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InterpretationRule) Reset() {
	*x = InterpretationRule{}
	mi := &file_medical_scale_medical_scale_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InterpretationRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterpretationRule) ProtoMessage() {}

func (x *InterpretationRule) ProtoReflect() protoreflect.Message {
	mi := &file_medical_scale_medical_scale_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterpretationRule.ProtoReflect.Descriptor instead.
func (*InterpretationRule) Descriptor() ([]byte, []int) {
	return file_medical_scale_medical_scale_proto_rawDescGZIP(), []int{9}
}

func (x *InterpretationRule) GetScoreRange() *ScoreRange {
	if x != nil {
		return x.ScoreRange
	}
	return nil
}

func (x *InterpretationRule) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// 分数范围
type ScoreRange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MinScore      float64                `protobuf:"fixed64,1,opt,name=min_score,json=minScore,proto3" json:"min_score,omitempty"` // 最小分数
	MaxScore      float64                `protobuf:"fixed64,2,opt,name=max_score,json=maxScore,proto3" json:"max_score,omitempty"` // 最大分数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScoreRange) Reset() {
	*x = ScoreRange{}
	mi := &file_medical_scale_medical_scale_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScoreRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoreRange) ProtoMessage() {}

func (x *ScoreRange) ProtoReflect() protoreflect.Message {
	mi := &file_medical_scale_medical_scale_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoreRange.ProtoReflect.Descriptor instead.
func (*ScoreRange) Descriptor() ([]byte, []int) {
	return file_medical_scale_medical_scale_proto_rawDescGZIP(), []int{10}
}

func (x *ScoreRange) GetMinScore() float64 {
	if x != nil {
		return x.MinScore
	}
	return 0
}

func (x *ScoreRange) GetMaxScore() float64 {
	if x != nil {
		return x.MaxScore
	}
	return 0
}

var File_medical_scale_medical_scale_proto protoreflect.FileDescriptor

const file_medical_scale_medical_scale_proto_rawDesc = "" +
	"\n" +
	"!medical-scale/medical-scale.proto\x12\rmedical_scale\"2\n" +
	"\x1cGetMedicalScaleByCodeRequest\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\"a\n" +
	"\x1dGetMedicalScaleByCodeResponse\x12@\n" +
	"\rmedical_scale\x18\x01 \x01(\v2\x1b.medical_scale.MedicalScaleR\fmedicalScale\"Z\n" +
	")GetMedicalScaleByQuestionnaireCodeRequest\x12-\n" +
	"\x12questionnaire_code\x18\x01 \x01(\tR\x11questionnaireCode\"n\n" +
	"*GetMedicalScaleByQuestionnaireCodeResponse\x12@\n" +
	"\rmedical_scale\x18\x01 \x01(\v2\x1b.medical_scale.MedicalScaleR\fmedicalScale\"\xb4\x02\n" +
	"\x0fInterpretReport\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12&\n" +
	"\x0fanswer_sheet_id\x18\x02 \x01(\x04R\ranswerSheetId\x12,\n" +
	"\x12medical_scale_code\x18\x03 \x01(\tR\x10medicalScaleCode\x12\x14\n" +
	"\x05title\x18\x04 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12E\n" +
	"\x0finterpret_items\x18\x06 \x03(\v2\x1c.medical_scale.InterpretItemR\x0einterpretItems\x12\x1d\n" +
	"\n" +
	"created_at\x18\a \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\b \x01(\tR\tupdatedAt\"v\n" +
	"\rInterpretItem\x12\x1f\n" +
	"\vfactor_code\x18\x01 \x01(\tR\n" +
	"factorCode\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x14\n" +
	"\x05score\x18\x03 \x01(\x01R\x05score\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\"\x88\x02\n" +
	"\fMedicalScale\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12\x12\n" +
	"\x04code\x18\x02 \x01(\tR\x04code\x12-\n" +
	"\x12questionnaire_code\x18\x03 \x01(\tR\x11questionnaireCode\x12\x14\n" +
	"\x05title\x18\x04 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12/\n" +
	"\afactors\x18\x06 \x03(\v2\x15.medical_scale.FactorR\afactors\x12\x1d\n" +
	"\n" +
	"created_at\x18\a \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\b \x01(\tR\tupdatedAt\"\x9a\x02\n" +
	"\x06Factor\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x1f\n" +
	"\vfactor_type\x18\x03 \x01(\tR\n" +
	"factorType\x12$\n" +
	"\x0eis_total_score\x18\x04 \x01(\bR\fisTotalScore\x12I\n" +
	"\x10calculation_rule\x18\x05 \x01(\v2\x1e.medical_scale.CalculationRuleR\x0fcalculationRule\x12T\n" +
	"\x14interpretation_rules\x18\x06 \x03(\v2!.medical_scale.InterpretationRuleR\x13interpretationRules\"W\n" +
	"\x0fCalculationRule\x12!\n" +
	"\fformula_type\x18\x01 \x01(\tR\vformulaType\x12!\n" +
	"\fsource_codes\x18\x02 \x03(\tR\vsourceCodes\"j\n" +
	"\x12InterpretationRule\x12:\n" +
	"\vscore_range\x18\x01 \x01(\v2\x19.medical_scale.ScoreRangeR\n" +
	"scoreRange\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\"F\n" +
	"\n" +
	"ScoreRange\x12\x1b\n" +
	"\tmin_score\x18\x01 \x01(\x01R\bminScore\x12\x1b\n" +
	"\tmax_score\x18\x02 \x01(\x01R\bmaxScore2\xa5\x02\n" +
	"\x13MedicalScaleService\x12r\n" +
	"\x15GetMedicalScaleByCode\x12+.medical_scale.GetMedicalScaleByCodeRequest\x1a,.medical_scale.GetMedicalScaleByCodeResponse\x12\x99\x01\n" +
	"\"GetMedicalScaleByQuestionnaireCode\x128.medical_scale.GetMedicalScaleByQuestionnaireCodeRequest\x1a9.medical_scale.GetMedicalScaleByQuestionnaireCodeResponseB^Z\\github.com/yshujie/questionnaire-scale/internal/apiserver/interface/grpc/proto/medical-scaleb\x06proto3"

var (
	file_medical_scale_medical_scale_proto_rawDescOnce sync.Once
	file_medical_scale_medical_scale_proto_rawDescData []byte
)

func file_medical_scale_medical_scale_proto_rawDescGZIP() []byte {
	file_medical_scale_medical_scale_proto_rawDescOnce.Do(func() {
		file_medical_scale_medical_scale_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_medical_scale_medical_scale_proto_rawDesc), len(file_medical_scale_medical_scale_proto_rawDesc)))
	})
	return file_medical_scale_medical_scale_proto_rawDescData
}

var file_medical_scale_medical_scale_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_medical_scale_medical_scale_proto_goTypes = []any{
	(*GetMedicalScaleByCodeRequest)(nil),               // 0: medical_scale.GetMedicalScaleByCodeRequest
	(*GetMedicalScaleByCodeResponse)(nil),              // 1: medical_scale.GetMedicalScaleByCodeResponse
	(*GetMedicalScaleByQuestionnaireCodeRequest)(nil),  // 2: medical_scale.GetMedicalScaleByQuestionnaireCodeRequest
	(*GetMedicalScaleByQuestionnaireCodeResponse)(nil), // 3: medical_scale.GetMedicalScaleByQuestionnaireCodeResponse
	(*InterpretReport)(nil),                            // 4: medical_scale.InterpretReport
	(*InterpretItem)(nil),                              // 5: medical_scale.InterpretItem
	(*MedicalScale)(nil),                               // 6: medical_scale.MedicalScale
	(*Factor)(nil),                                     // 7: medical_scale.Factor
	(*CalculationRule)(nil),                            // 8: medical_scale.CalculationRule
	(*InterpretationRule)(nil),                         // 9: medical_scale.InterpretationRule
	(*ScoreRange)(nil),                                 // 10: medical_scale.ScoreRange
}
var file_medical_scale_medical_scale_proto_depIdxs = []int32{
	6,  // 0: medical_scale.GetMedicalScaleByCodeResponse.medical_scale:type_name -> medical_scale.MedicalScale
	6,  // 1: medical_scale.GetMedicalScaleByQuestionnaireCodeResponse.medical_scale:type_name -> medical_scale.MedicalScale
	5,  // 2: medical_scale.InterpretReport.interpret_items:type_name -> medical_scale.InterpretItem
	7,  // 3: medical_scale.MedicalScale.factors:type_name -> medical_scale.Factor
	8,  // 4: medical_scale.Factor.calculation_rule:type_name -> medical_scale.CalculationRule
	9,  // 5: medical_scale.Factor.interpretation_rules:type_name -> medical_scale.InterpretationRule
	10, // 6: medical_scale.InterpretationRule.score_range:type_name -> medical_scale.ScoreRange
	0,  // 7: medical_scale.MedicalScaleService.GetMedicalScaleByCode:input_type -> medical_scale.GetMedicalScaleByCodeRequest
	2,  // 8: medical_scale.MedicalScaleService.GetMedicalScaleByQuestionnaireCode:input_type -> medical_scale.GetMedicalScaleByQuestionnaireCodeRequest
	1,  // 9: medical_scale.MedicalScaleService.GetMedicalScaleByCode:output_type -> medical_scale.GetMedicalScaleByCodeResponse
	3,  // 10: medical_scale.MedicalScaleService.GetMedicalScaleByQuestionnaireCode:output_type -> medical_scale.GetMedicalScaleByQuestionnaireCodeResponse
	9,  // [9:11] is the sub-list for method output_type
	7,  // [7:9] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_medical_scale_medical_scale_proto_init() }
func file_medical_scale_medical_scale_proto_init() {
	if File_medical_scale_medical_scale_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_medical_scale_medical_scale_proto_rawDesc), len(file_medical_scale_medical_scale_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_medical_scale_medical_scale_proto_goTypes,
		DependencyIndexes: file_medical_scale_medical_scale_proto_depIdxs,
		MessageInfos:      file_medical_scale_medical_scale_proto_msgTypes,
	}.Build()
	File_medical_scale_medical_scale_proto = out.File
	file_medical_scale_medical_scale_proto_goTypes = nil
	file_medical_scale_medical_scale_proto_depIdxs = nil
}
