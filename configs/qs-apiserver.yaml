# qs-apiserver 全配置

# RESTful 服务配置
server:
    mode: debug # server mode: release, debug, test，默认 release
    healthz: true # 是否开启健康检查，如果开启会安装 /healthz 路由，默认 true
    middlewares: recovery,logger,secure,nocache,cors,dump # 加载的 gin 中间件列表，多个中间件，逗号(,)隔开
    max-ping-count: 3 # http 服务启动后，自检尝试次数，默认 3

# HTTP 配置
insecure:
    bind-address: 0.0.0.0 # 绑定的不安全 IP 地址，设置为 0.0.0.0 表示使用全部网络接口，默认为 127.0.0.1
    bind-port: 8080 # 提供非安全认证的监听端口，默认为 8080

# HTTPS 配置
secure:
    bind-address: 0.0.0.0 # HTTPS 安全模式的 IP 地址，默认为 0.0.0.0
    bind-port: 8443 # 使用 HTTPS 安全模式的端口号，设置为 0 表示不启用 HTTPS，默认为 8443
    tls:
        cert-dir: ./cert # TLS 证书所在的目录，默认值为 /var/run/iam
        pair-name: qs # TLS 私钥对名称，默认 iam
        cert-key:
            cert-file: ./configs/cert/qs-apiserver.crt # 包含 x509 证书的文件路径，用 HTTPS 认证
            private-key-file: ./configs/cert/qs-apiserver.key # TLS 私钥

# MySQL 数据库配置
mysql:
  host: "127.0.0.1:3306" # MySQL 服务器地址
  username: "root" # 数据库用户名
  password: "" # 数据库密码
  database: "questionnaire_scale" # 数据库名称
  max-idle-connections: 10 # 最大空闲连接数
  max-open-connections: 100 # 最大打开连接数
  max-connection-life-time: "1h" # 连接最大生存时间
  log-level: 1 # 日志级别 (1=Silent, 2=Error, 3=Warn, 4=Info)

# 日志配置
log:
  level: "info" # 日志级别：debug, info, warn, error, fatal, panic
  format: "console" # 日志格式：console, json
  enable-color: true # 是否开启颜色
  disable-caller: false # 是否禁用调用者
  disable-stacktrace: false # 是否禁用堆栈跟踪
  development: false # 是否为开发环境
  output-paths: ["/data/logs/qs/qs-apiserver.log", "stdout"] # 输出路径
  error-output-paths: ["/data/logs/qs/qs-apiserver-error.log", "stderr"] # 错误输出路径
  max-size: 100 # 单个日志文件最大大小（MB）
  max-age: 30 # 保留旧日志文件的最大天数
  max-backups: 10 # 保留旧日志文件的最大个数
  compress: true # 是否压缩旧日志文件